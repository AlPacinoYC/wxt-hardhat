/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Transfer, TransferInterface } from "../Transfer";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "getBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610679806100206000396000f3fe60806040526004361061004a5760003560e01c806327e235e31461004f5780636f9fb98a1461008c578063a9059cbb146100b7578063d0e30db0146100e0578063f8b2cb4f146100ea575b600080fd5b34801561005b57600080fd5b5061007660048036038101906100719190610424565b610127565b604051610083919061046a565b60405180910390f35b34801561009857600080fd5b506100a161013f565b6040516100ae919061046a565b60405180910390f35b3480156100c357600080fd5b506100de60048036038101906100d991906104ef565b610147565b005b6100e8610322565b005b3480156100f657600080fd5b50610111600480360381019061010c9190610424565b610379565b60405161011e919061046a565b60405180910390f35b60006020528060005260406000206000915090505481565b600047905090565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156101c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101bf9061058c565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461021691906105db565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461026b919061060f565b925050819055508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156102b8573d6000803e3d6000fd5b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167feaf1c4b3ce0f4f62a2bae7eb3e68225c75f7e6ff4422073b7437b9a78d25f17083604051610316919061046a565b60405180910390a35050565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610370919061060f565b92505081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103f1826103c6565b9050919050565b610401816103e6565b811461040c57600080fd5b50565b60008135905061041e816103f8565b92915050565b60006020828403121561043a576104396103c1565b5b60006104488482850161040f565b91505092915050565b6000819050919050565b61046481610451565b82525050565b600060208201905061047f600083018461045b565b92915050565b6000610490826103c6565b9050919050565b6104a081610485565b81146104ab57600080fd5b50565b6000813590506104bd81610497565b92915050565b6104cc81610451565b81146104d757600080fd5b50565b6000813590506104e9816104c3565b92915050565b60008060408385031215610506576105056103c1565b5b6000610514858286016104ae565b9250506020610525858286016104da565b9150509250929050565b600082825260208201905092915050565b7f496e73756666696369656e742062616c616e6365000000000000000000000000600082015250565b600061057660148361052f565b915061058182610540565b602082019050919050565b600060208201905081810360008301526105a581610569565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105e682610451565b91506105f183610451565b9250828203905081811115610609576106086105ac565b5b92915050565b600061061a82610451565b915061062583610451565b925082820190508082111561063d5761063c6105ac565b5b9291505056fea26469706673582212200ff5d1551d0d88b4701c2735317bb658b69cc57e01741c1743b6e832df1e2ead64736f6c63430008180033";

type TransferConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TransferConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Transfer__factory extends ContractFactory {
  constructor(...args: TransferConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Transfer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Transfer__factory {
    return super.connect(runner) as Transfer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TransferInterface {
    return new Interface(_abi) as TransferInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Transfer {
    return new Contract(address, _abi, runner) as unknown as Transfer;
  }
}
